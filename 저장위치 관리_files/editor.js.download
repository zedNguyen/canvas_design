/**
 * @description 첨부파일 리스트 초기화
 * @param       editorId(html ID), imgEmbedYn(y/n, 이미지 HTML 내장 첨부 여부), editable(파일 삭제 가능 여부 T/F)
 *              userId(유저ID, imgEmbedYn=N 인경우), boardCd(게시판ID, imgEmbedYn=N 인경우)
 *              config (필수아님 width 나 height를 지정할수 있다.
 * @return      true / false
*/
Pine.prototype.editorInit = function (editorId, imgEmbedYn, userId, boardCd, config) {
        let m_config = {width : '100%', height : 250 , readOnly : false };
        if(config!=undefined){
            if(config.width != undefined){
                m_config.width = config.width;
            }
            if(config.height != undefined){
                m_config.height = config.height;
            }
            if(config.readOnly != undefined){
                m_config.readOnly = config.readOnly;
            }
        }
        
        let ckeditor = null;
        do {
            
            if (editorId == undefined || editorId == null) break;
            if (imgEmbedYn == undefined || imgEmbedYn == null) break;
            
            if (imgEmbedYn != 'y' && imgEmbedYn != 'Y') {
                imgEmbedYn = 'n';
            }
            
            let extraPluginsStr;
            let filebrowserUploadUrlStr;

            if (imgEmbedYn == 'n') {
                // 이미지 파일을 첨부로 사용하는 경우 필수
                if (userId == undefined || userId == null) break;
                if (boardCd == undefined || boardCd == null) break;
                
                extraPluginsStr = 'image2,uploadimage';
                filebrowserUploadUrlStr ='/api/file/ckeditor-img?loginUserId=' + userId + "&BOARD_CD="+ boardCd;
            } else {
                extraPluginsStr = 'autoembed,embedsemantic,image2,pastebase64';
                filebrowserUploadUrlStr = undefined;
            }
          
            ckeditor = CKEDITOR.replace( editorId, {
                // Define the toolbar: http://docs.ckeditor.com/ckeditor4/docs/#!/guide/dev_toolbar
                // The standard preset from CDN which we used as a base provides more features than we need.
                // Also by default it comes with a 2-line toolbar. Here we put all buttons in a single row.
                toolbar: [
                    { name: 'clipboard', items: [ 'Undo', 'Redo' ] },
                    { name: 'styles', items: [ 'Styles', 'Format' ] },
                    { name: 'basicstyles', items: [ 'Bold', 'Italic', 'Strike', '-', 'RemoveFormat' ] },
                    { name: 'paragraph', items: [ 'NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote' ] },
                    { name: 'links', items: [ 'Link', 'Unlink' ] },
                    { name: 'insert', items: [ 'Image', 'EmbedSemantic', 'Table' ] },
                    { name: 'tools', items: [ 'Maximize' ] },
                    { name: 'editing', items: [ 'Scayt' ] }
                ],
                readOnly : m_config.readOnly,
                allowedContent: true,
                // Since we define all configuration options here, let's instruct CKEditor to not load config.js which it does by default. // One HTTP request less will result in a faster startup time.
                // For more information check http://docs.ckeditor.com/ckeditor4/docs/#!/api/CKEDITOR.config-cfg-customConfig
                customConfig: '',
                // Eautoembed,embedsemantic,nabling extra plugins, available in the standard-all preset: http://ckeditor.com/presets-all
                extraPlugins: extraPluginsStr,
                /*********************** File management support ***********************/
                // In order to turn on support for file uploads, CKEditor has to be configured to use some server side
                // solution with file upload/management capabilities, like for example CKFinder.
                // For more information see http://docs.ckeditor.com/ckeditor4/docs/#!/guide/dev_ckfinder_integration
                // Uncomment and correct these lines after you setup your local CKFinder instance.
                // filebrowserBrowseUrl: 'http://example.com/ckfinder/ckfinder.html',
                // filebrowserUploadUrl: 'http://example.com/ckfinder/core/connector/php/connector.php?command=QuickUpload&type=Files',
                //filebrowserUploadUrl: '/api/file/ckeditor-img?loginUserId=' + userId + "&BOARD_CD="+ boardCd,
                imageUploadUrl:filebrowserUploadUrlStr,
                uploadUrl:filebrowserUploadUrlStr,
                filebrowserImageUploadUrl:filebrowserUploadUrlStr,
                filebrowserUploadUrl: filebrowserUploadUrlStr,
                /*********************** File ***************/
                // Remove the default image plugin because image2, which offers captions for images, was enabled above.
                removePlugins: 'image,textMatch',
                // Make the editing area bigger than default.
                height: m_config.height,
                // An array of stylesheets to style the WYSIWYG area.
                // Note: it is recommended to keep your own styles in a separate file in order to make future updates painless.
                contentsCss: [ '/css/ckeditor-contents.css' ],
                // This is optional, but will let us define multiple different styles for multiple editors using the same CSS file.
                bodyClass: 'article-editor',
                // Reduce the list of block elements listed in the Format dropdown to the most commonly used.
                format_tags: 'p;h1;h2;h3;pre',
                // Simplify the Image and Link dialog windows. The "Advanced" tab is not needed in most cases.
                removeDialogTabs: 'image:advanced;link:advanced',
                // Define the list of styles which should be available in the Styles dropdown list.
                // If the "class" attribute is used to style an element, make sure to define the style for the class in "mystyles.css"
                // (and on your website so that it rendered in the same way).
                // Note: by default CKEditor looks for styles.js file. Defining stylesSet inline (as below) stops CKEditor from loading
                // that file, which means one HTTP request less (and a faster startup).
                // For more information see http://docs.ckeditor.com/ckeditor4/docs/#!/guide/dev_styles
                stylesSet: [
                    /* Inline Styles */
                    { name: 'Marker',           element: 'span', attributes: { 'class': 'marker' } },
                    { name: 'Cited Work',       element: 'cite' },
                    { name: 'Inline Quotation', element: 'q' },
                    /* Object Styles */
                    {
                        name: 'Special Container',
                        element: 'div',
                        styles: {
                            padding: '5px 10px',
                            background: '#eee',
                            border: '1px solid #ccc'
                        }
                    },
                    {
                        name: 'Compact table',
                        element: 'table',
                        attributes: {
                            cellpadding: '5',
                            cellspacing: '0',
                            border: '1',
                            bordercolor: '#ccc'
                        },
                        styles: {
                            'border-collapse': 'collapse'
                        }
                    },
                    { name: 'Borderless Table',     element: 'table',   styles: { 'border-style': 'hidden', 'background-color': '#E6E6FA' } },
                    { name: 'Square Bulleted List', element: 'ul',      styles: { 'list-style-type': 'square' } },
                    /* Widget Styles */
                    // We use this one to style the brownie picture.
                    { name: 'Illustration', type: 'widget', widget: 'image', attributes: { 'class': 'image-illustration' } },
                    // Media embed
                    { name: '240p', type: 'widget', widget: 'embedSemantic', attributes: { 'class': 'embed-240p' } },
                    { name: '360p', type: 'widget', widget: 'embedSemantic', attributes: { 'class': 'embed-360p' } },
                    { name: '480p', type: 'widget', widget: 'embedSemantic', attributes: { 'class': 'embed-480p' } },
                    { name: '720p', type: 'widget', widget: 'embedSemantic', attributes: { 'class': 'embed-720p' } },
                    { name: '1080p', type: 'widget', widget: 'embedSemantic', attributes: { 'class': 'embed-1080p' } }
                ]
            } );
            
            return ckeditor;
        
        } while (false);
        
        alert("editorInit 함수를 처리 중 에러가 발생했습니다.");
        
        return ckeditor;
}